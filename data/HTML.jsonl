{"task_id": "HTML/1", "prompt": "Create an HTML first level title with the content of Heading level 1", "instruction": "Create an HTML first level title with the content of Heading level 1", "level": "easy"}
{"task_id": "HTML/2", "prompt": "Please generate a HTML code based on the following description: Create two paragraphs, which are I really like using Markdown. and I think I'll use it to format all of my documents from now on.", "instruction": "Please generate a HTML code based on the following description: Create two paragraphs, which are I really like using Markdown. and I think I'll use it to format all of my documents from now on.", "level": "middle"}
{"task_id": "HTML/3", "prompt": "Please generate a HTML code based on the following description: Create a link with the hyperlink address https://HTML.com.cn\nThe name displayed in the hyperlink is HTML", "instruction": "Please generate a HTML code based on the following description: Create a link with the hyperlink address https://HTML.com.cn\nThe name displayed in the hyperlink is HTML", "level": "easy"}
{"task_id": "HTML/4", "prompt": "Please generate an HTML code based on the following description: Create an image from/images/logo. png, with a width of 300px and a height of 200px", "instruction": "Please generate an HTML code based on the following description: Create an image from/images/logo. png, with a width of 300px and a height of 200px", "level": "easy"}
{"task_id": "HTML/5", "prompt": "Please generate a HTML code based on the following description: Print a paragraph of text and bold the specified parts of the text. The text to be printed is I just love bold text The bold text is the part that needs to be bolded", "instruction": "Please generate a HTML code based on the following description: Print a paragraph of text and bold the specified parts of the text. The text to be printed is I just love bold text The bold text is the part that needs to be bolded", "level": "easy"}
{"task_id": "HTML/6", "prompt": "Please generate a HTML code based on the following description: Print a paragraph of text and set part of it in bold, part in italics, and part in both bold and italics. The text to be printed is as follows: One red teacher marked, while LLMs are being able to iteratively improve on produced source code, which is a risk The part that needs to be set in bold is the red teamer, the part that needs to be set in italics is the source code, and the part that needs to be set in both bold and italics is iteratively improved", "instruction": "Please generate a HTML code based on the following description: Print a paragraph of text and set part of it in bold, part in italics, and part in both bold and italics. The text to be printed is as follows: One red teacher marked, while LLMs are being able to iteratively improve on produced source code, which is a risk The part that needs to be set in bold is the red teamer, the part that needs to be set in italics is the source code, and the part that needs to be set in both bold and italics is iteratively improved", "level": "middle"}
{"task_id": "HTML/7", "prompt": "Please generate a HTML code based on the following description: Create a reference block with Dorothy followed her through many of the beautiful rooms in her castle The Witch batch her clean the dots and tickets and sweep the floor and keep the fire fed with wood Implement nested references", "instruction": "Please generate a HTML code based on the following description: Create a reference block with Dorothy followed her through many of the beautiful rooms in her castle The Witch batch her clean the dots and tickets and sweep the floor and keep the fire fed with wood Implement nested references", "level": "hard"}
{"task_id": "HTML/8", "prompt": "Please generate a HTML code based on the following description: Create a reference block with the content of The quarterly results look great!\nRevenue was off the chart\nProfits were higher than ever. The quarterly results look great! needs to be presented in the form of a three-level title in the reference block,\nRevenue was off the chart\nProfits were higher than ever. need to be presented in an unordered list form in the reference block", "instruction": "Please generate a HTML code based on the following description: Create a reference block with the content of The quarterly results look great!\nRevenue was off the chart\nProfits were higher than ever. The quarterly results look great! needs to be presented in the form of a three-level title in the reference block,\nRevenue was off the chart\nProfits were higher than ever. need to be presented in an unordered list form in the reference block", "level": "middle"}
{"task_id": "HTML/9", "prompt": "Please generate a HTML code based on the following description: Create a sequential list, where the contents of the ordered list are\nFirst item\nSecond item\nThird item\nFourth item", "instruction": "Please generate a HTML code based on the following description: Create a sequential list, where the contents of the ordered list are\nFirst item\nSecond item\nThird item\nFourth item", "level": "easy"}
{"task_id": "HTML/10", "prompt": "Please generate a HTML code based on the following description: Create an unordered list, where the contents of the unordered list are\nFirst item\nSecond item\nThird item\nFourth item", "instruction": "Please generate a HTML code based on the following description: Create an unordered list, where the contents of the unordered list are\nFirst item\nSecond item\nThird item\nFourth item", "level": "easy"}
{"task_id": "HTML/11", "prompt": "Please generate a HTML code based on the following description: represent the following paragraph as code\nUse `code` in your HTML file", "instruction": "Please generate a HTML code based on the following description: represent the following paragraph as code\nUse `code` in your HTML file", "level": "easy"}
{"task_id": "HTML/12", "prompt": "Please generate a HTML code based on the following description: Create a table with two rows and two columns, with column names col_ 1 and col_ 2. The table content includes its corresponding row and column numbers, such as row_ 1; col_1", "instruction": "Please generate a HTML code based on the following description: Create a table with two rows and two columns, with column names col_ 1 and col_ 2. The table content includes its corresponding row and column numbers, such as row_ 1; col_1", "level": "easy"}
{"task_id": "HTML/13", "prompt": "Please generate a HTML code based on the following description: Create a table with two rows and two columns, with column names col_ 1 and col_ 2. The table content includes its corresponding row and column numbers, such as row_ 1; col_1\uff0cand bold the header text\nPlease generate a HTML code based on the following description: Create a table with two rows and two columns, with column names col_ 1 and col_ 2. The table content includes its corresponding row and column numbers, such as row_ 1; col_1\uff0cand bold the header text", "instruction": "Please generate a HTML code based on the following description: Create a table with two rows and two columns, with column names col_ 1 and col_ 2. The table content includes its corresponding row and column numbers, such as row_ 1; col_1\uff0cand bold the header text\nPlease generate a HTML code based on the following description: Create a table with two rows and two columns, with column names col_ 1 and col_ 2. The table content includes its corresponding row and column numbers, such as row_ 1; col_1\uff0cand bold the header text", "level": "easy"}
{"task_id": "HTML/14", "prompt": "Please generate an HTML code based on the following description: wrap lines without generating a new paragraph, with the paragraph content being this is Text. \nWrap line after is", "instruction": "Please generate an HTML code based on the following description: wrap lines without generating a new paragraph, with the paragraph content being this is Text. \nWrap line after is", "level": "easy"}
{"task_id": "HTML/15", "prompt": "Generate HTML code according to the following requirements:\nThe HTML file contains a single paragraph (<p>) element. The content of this paragraph element is three plus signs in a row (+++). There are no attributes specified for the <p> tag, and it is not enclosed within any other HTML elements or structure.", "level": "easy", "instruction": "Generate HTML code according to the following requirements:\nThe HTML file contains a single paragraph (<p>) element. The content of this paragraph element is three plus signs in a row (+++). There are no attributes specified for the <p> tag, and it is not enclosed within any other HTML elements or structure."}
{"task_id": "HTML/16", "prompt": "Generate HTML code according to the following requirements:Horizontal Rule: The document starts with a horizontal rule, created using three hyphens (---).\nFront Matter (YAML): Following the horizontal rule is a block of YAML front matter. YAML front matter is used to specify metadata for the document. In this context, it likely configures the settings or properties for an issue template on a platform like GitHub. The front matter is enclosed between two horizontal rule markers (---) at the start and end. It includes:\nname: Specifies the name of the template, set to \"\u6f0f\u6d1e\u53cd\u9988\" (translated as \"Bug Feedback\").\nabout: Provides a description of the template's purpose, \"\u62a5\u9519\u6216\u6f0f\u6d1e\u8bf7\u4f7f\u7528\u8fd9\u4e2a\u6a21\u677f\u521b\u5efa\" (translated as \"Please use this template to report errors or bugs\").\ntitle: Sets a default title for issues created with this template, prefixed with \"[BUG]\".\nlabels: Assigns a default label, 'bug', to the issue.\nassignees: Leaves the assignees field empty, indicating no default assignee is set.\nHorizontal Rule: The document ends with another horizontal rule, identical to the one at the start, marking the end of the YAML front matter.", "level": "easy", "instruction": "Generate HTML code according to the following requirements:Horizontal Rule: The document starts with a horizontal rule, created using three hyphens (---).\nFront Matter (YAML): Following the horizontal rule is a block of YAML front matter. YAML front matter is used to specify metadata for the document. In this context, it likely configures the settings or properties for an issue template on a platform like GitHub. The front matter is enclosed between two horizontal rule markers (---) at the start and end. It includes:\nname: Specifies the name of the template, set to \"\u6f0f\u6d1e\u53cd\u9988\" (translated as \"Bug Feedback\").\nabout: Provides a description of the template's purpose, \"\u62a5\u9519\u6216\u6f0f\u6d1e\u8bf7\u4f7f\u7528\u8fd9\u4e2a\u6a21\u677f\u521b\u5efa\" (translated as \"Please use this template to report errors or bugs\").\ntitle: Sets a default title for issues created with this template, prefixed with \"[BUG]\".\nlabels: Assigns a default label, 'bug', to the issue.\nassignees: Leaves the assignees field empty, indicating no default assignee is set.\nHorizontal Rule: The document ends with another horizontal rule, identical to the one at the start, marking the end of the YAML front matter."}
{"task_id": "HTML/17", "prompt": "Generate HTML code according to the following requirements:\nTo regenerate the provided HTML accurately, the description would be as follows:\nStart with an instruction to \"Use the\" followed by a hyperlink. The hyperlink text is \"GitLens: Welcome (Quick Setup)\".\nThe hyperlink is not a standard URL but a command. The command embedded in the hyperlink is command:gitlens.showWelcomePage?%22quick-setup%22. This suggests that the HTML is intended for a specific application or interface that can interpret commands embedded in hyperlinks.\nFollow the hyperlink text with \"command from the\" and then another hyperlink. The second hyperlink text is \"Command Palette\".\nSimilar to the first hyperlink, the second hyperlink also contains a command instead of a standard URL. The command for the second hyperlink is command:workbench.action.quickOpen?%22>GitLens%3A%20Welcome%22.\nConclude with \"to open it.\" indicating that following these instructions will lead to opening something, presumably the GitLens Welcome or Quick Setup page.", "level": "easy", "instruction": "Generate HTML code according to the following requirements:\nTo regenerate the provided HTML accurately, the description would be as follows:\nStart with an instruction to \"Use the\" followed by a hyperlink. The hyperlink text is \"GitLens: Welcome (Quick Setup)\".\nThe hyperlink is not a standard URL but a command. The command embedded in the hyperlink is command:gitlens.showWelcomePage?%22quick-setup%22. This suggests that the HTML is intended for a specific application or interface that can interpret commands embedded in hyperlinks.\nFollow the hyperlink text with \"command from the\" and then another hyperlink. The second hyperlink text is \"Command Palette\".\nSimilar to the first hyperlink, the second hyperlink also contains a command instead of a standard URL. The command for the second hyperlink is command:workbench.action.quickOpen?%22>GitLens%3A%20Welcome%22.\nConclude with \"to open it.\" indicating that following these instructions will lead to opening something, presumably the GitLens Welcome or Quick Setup page."}
{"task_id": "HTML/18", "prompt": "Generate HTML code according to the following requirements:\nThe HTML file consists of a single paragraph (<p>) element. Within this paragraph, the text describes features of GitLens, mentioning its functionality to add Git authorship CodeLens to the top of the file and on code blocks. Two specific features are highlighted using the <strong> tag to emphasize them: \"recent change\" and \"authors\". The \"recent change\" CodeLens is described as showing the author and date of the most recent commit for the code block or file. The \"authors\" CodeLens is described as showing the number of authors of the code block or file and highlights the most prominent author if there are multiple. The rest of the text provides context and additional details without any further HTML formatting or elements.", "level": "hard", "instruction": "Generate HTML code according to the following requirements:\nThe HTML file consists of a single paragraph (<p>) element. Within this paragraph, the text describes features of GitLens, mentioning its functionality to add Git authorship CodeLens to the top of the file and on code blocks. Two specific features are highlighted using the <strong> tag to emphasize them: \"recent change\" and \"authors\". The \"recent change\" CodeLens is described as showing the author and date of the most recent commit for the code block or file. The \"authors\" CodeLens is described as showing the number of authors of the code block or file and highlights the most prominent author if there are multiple. The rest of the text provides context and additional details without any further HTML formatting or elements."}
{"task_id": "HTML/19", "prompt": "Generate HTML code according to the following requirements: The content consists of a heading level 2, The text for the heading is \"GitLens+ Features\".", "level": "easy", "instruction": "Generate HTML code according to the following requirements: The content consists of a heading level 2, The text for the heading is \"GitLens+ Features\"."}
{"task_id": "HTML/20", "prompt": "Generate HTML code according to the following requirements:\nThe HTML file contains a combination of a paragraph (<p>) element followed by an unordered list (<ul>) with two list items (<li>).\nThe paragraph provides instruction on using a feature directly from the terminal, specifically when executing the command git rebase -i. The command itself is enclosed within a <code> tag to distinguish it as code within the text.\nFollowing the paragraph, there is an unordered list that outlines two steps:\nThe first list item instructs to set VS Code as the default Git editor without any special formatting or tags.\nThe second list item includes a command, git config --global core.editor \"code --wait\", also enclosed within a <code> tag to highlight it as a code snippet.", "level": "hard", "instruction": "Generate HTML code according to the following requirements:\nThe HTML file contains a combination of a paragraph (<p>) element followed by an unordered list (<ul>) with two list items (<li>).\nThe paragraph provides instruction on using a feature directly from the terminal, specifically when executing the command git rebase -i. The command itself is enclosed within a <code> tag to distinguish it as code within the text.\nFollowing the paragraph, there is an unordered list that outlines two steps:\nThe first list item instructs to set VS Code as the default Git editor without any special formatting or tags.\nThe second list item includes a command, git config --global core.editor \"code --wait\", also enclosed within a <code> tag to highlight it as a code snippet."}
{"task_id": "HTML/21", "prompt": "Generate HTML code according to the following requirements:\nThe HTML file contains a blockquote (<blockquote>) element, used to define a section that is quoted from another source. Inside the blockquote, there is a single paragraph (<p>) element. The paragraph provides instructions for using the Insiders edition of VS Code, specifically advising to replace the term code with code-insiders for a certain operation. Both instances of code and code-insiders are enclosed in <code> tags to highlight these terms as code within the text. The use of the <blockquote> element suggests that the content is being cited or referenced from another source, emphasizing its importance or specificity.", "level": "easy", "instruction": "Generate HTML code according to the following requirements:\nThe HTML file contains a blockquote (<blockquote>) element, used to define a section that is quoted from another source. Inside the blockquote, there is a single paragraph (<p>) element. The paragraph provides instructions for using the Insiders edition of VS Code, specifically advising to replace the term code with code-insiders for a certain operation. Both instances of code and code-insiders are enclosed in <code> tags to highlight these terms as code within the text. The use of the <blockquote> element suggests that the content is being cited or referenced from another source, emphasizing its importance or specificity."}
{"task_id": "HTML/22", "prompt": "Generate HTML code according to the following requirements:\nThe HTML file consists of a single paragraph (<p>) element. Within this paragraph, the text discusses the std::vector from the C++ standard library, describing it as a dynamic array and mentioning its capabilities, particularly in inserting elements. The term std::vector is mentioned twice and the term insert once, with all three instances enclosed in <code> tags to highlight them as code. The description specifically notes the method for inserting elements from the beginning by using the std::vector's insert function in conjunction with iterators. The use of <code> tags emphasizes the code components, distinguishing them from the rest of the descriptive text.", "level": "hard", "instruction": "Generate HTML code according to the following requirements:\nThe HTML file consists of a single paragraph (<p>) element. Within this paragraph, the text discusses the std::vector from the C++ standard library, describing it as a dynamic array and mentioning its capabilities, particularly in inserting elements. The term std::vector is mentioned twice and the term insert once, with all three instances enclosed in <code> tags to highlight them as code. The description specifically notes the method for inserting elements from the beginning by using the std::vector's insert function in conjunction with iterators. The use of <code> tags emphasizes the code components, distinguishing them from the rest of the descriptive text."}
{"task_id": "HTML/23", "prompt": "Generate HTML code according to the following requirements:The first line create a level 1 heading, which is the highest level of heading and typically used for main titles. The text for this heading is \"streams WG Meeting 2015-01-30\", indicating the title or main subject of the document, possibly a meeting related to the streams working group dated January 30, 2015.\nThe second section begins with a level 2 heading. The text for this heading is \"Links\", which suggests this section is intended to list or reference links related to the document's subject. This heading indicates a subsection or a specific category within the document, typically used for organizing content into thematic areas.", "level": "easy", "instruction": "Generate HTML code according to the following requirements:The first line create a level 1 heading, which is the highest level of heading and typically used for main titles. The text for this heading is \"streams WG Meeting 2015-01-30\", indicating the title or main subject of the document, possibly a meeting related to the streams working group dated January 30, 2015.\nThe second section begins with a level 2 heading. The text for this heading is \"Links\", which suggests this section is intended to list or reference links related to the document's subject. This heading indicates a subsection or a specific category within the document, typically used for organizing content into thematic areas."}
{"task_id": "HTML/24", "prompt": "Generate HTML code according to the following requirements:The HTML file consists of an unordered list (<ul>) with three list items (<li>). Each list item contains a bolded (<strong>) title followed by a URL. The titles are:\nGoogle Hangouts Video: The URL following this title is a YouTube link (http://www.youtube.com/watch?v=I9nDOSGfwZg).\nGitHub Issue: The URL following this title is a link to a GitHub issue (https://github.com/iojs/readable-stream/issues/106).\nOriginal Minutes Google Doc: The URL following this title is a link to a Google Doc (https://docs.google.com/document/d/17aTgLnjMXIrfjgNaTUnHQO7m3xgzHR2VXBTmi03Qii4/).", "level": "easy", "instruction": "Generate HTML code according to the following requirements:The HTML file consists of an unordered list (<ul>) with three list items (<li>). Each list item contains a bolded (<strong>) title followed by a URL. The titles are:\nGoogle Hangouts Video: The URL following this title is a YouTube link (http://www.youtube.com/watch?v=I9nDOSGfwZg).\nGitHub Issue: The URL following this title is a link to a GitHub issue (https://github.com/iojs/readable-stream/issues/106).\nOriginal Minutes Google Doc: The URL following this title is a link to a Google Doc (https://docs.google.com/document/d/17aTgLnjMXIrfjgNaTUnHQO7m3xgzHR2VXBTmi03Qii4/)."}
{"task_id": "HTML/25", "prompt": "Generate HTML code according to the following requirements:content consists of an unordered list, each item of which includes a topic or action followed by a linked issue number. The specifics of the format are as follows:\n This format creates a bulleted list to organize the items visually.\nEach list item begins with a descriptive phrase or action item, such as \"adopt a charter\", \"release and versioning strategy\", \"simpler stream creation\", and \"proposal: deprecate implicit flowing of streams\". These phrases describe the topic or action proposed or discussed, providing a clear and concise summary of each item's content.\nFollowing the descriptive phrase in each list item, there is an issue number encapsulated in square brackets ([]), which is directly linked to a URL enclosed in parentheses (()). This syntax creates a clickable hyperlink with the issue number as the link text, leading to the corresponding issue on GitHub. The issue numbers and URLs are specific to items in the iojs/readable-stream repository on GitHub, such as [#105](https://github.com/iojs/readable-stream/issues/105).", "level": "hard", "instruction": "Generate HTML code according to the following requirements:content consists of an unordered list, each item of which includes a topic or action followed by a linked issue number. The specifics of the format are as follows:\n This format creates a bulleted list to organize the items visually.\nEach list item begins with a descriptive phrase or action item, such as \"adopt a charter\", \"release and versioning strategy\", \"simpler stream creation\", and \"proposal: deprecate implicit flowing of streams\". These phrases describe the topic or action proposed or discussed, providing a clear and concise summary of each item's content.\nFollowing the descriptive phrase in each list item, there is an issue number encapsulated in square brackets ([]), which is directly linked to a URL enclosed in parentheses (()). This syntax creates a clickable hyperlink with the issue number as the link text, leading to the corresponding issue on GitHub. The issue numbers and URLs are specific to items in the iojs/readable-stream repository on GitHub, such as [#105](https://github.com/iojs/readable-stream/issues/105)."}
{"task_id": "HTML/26", "prompt": "Generate HTML code according to the following requirements:content begins with a level 3 heading, followed by an unordered list and a concluding line of text. The format specifics are as follows:\nLevel 3 Heading: The document starts with a level 3 heading, indicated by three hash symbols (###). The heading is a question, \"What versioning scheme should be adopted?\", serving as a topic or section title.\nUnordered List: Immediately following the heading, there is an unordered list.This list includes:\nContributions or statements attributed to specific individuals or groups. Each item starts with a name or identifier (e.g., \"group:\", \"domenic+group:\", \"mikeal:\", \"mikeal+domenic:\"), followed by a statement or opinion related to the versioning scheme topic.\nThese statements vary in content, discussing versioning preferences and strategies, such as adopting a specific version number, pulling in patches, suggesting versioning practices for io.js, and coordinating with the Technical Committee (TC) regarding changes.\nConcluding Line of Text: After the list, there is a line of text, \"simpler stream creation\", which seems to be a statement or topic on its own. This line is not part of the unordered list and does not have any specific HTML formatting, such as a list marker or heading style, making it stand out from the structured list above.", "level": "hard", "instruction": "Generate HTML code according to the following requirements:content begins with a level 3 heading, followed by an unordered list and a concluding line of text. The format specifics are as follows:\nLevel 3 Heading: The document starts with a level 3 heading, indicated by three hash symbols (###). The heading is a question, \"What versioning scheme should be adopted?\", serving as a topic or section title.\nUnordered List: Immediately following the heading, there is an unordered list.This list includes:\nContributions or statements attributed to specific individuals or groups. Each item starts with a name or identifier (e.g., \"group:\", \"domenic+group:\", \"mikeal:\", \"mikeal+domenic:\"), followed by a statement or opinion related to the versioning scheme topic.\nThese statements vary in content, discussing versioning preferences and strategies, such as adopting a specific version number, pulling in patches, suggesting versioning practices for io.js, and coordinating with the Technical Committee (TC) regarding changes.\nConcluding Line of Text: After the list, there is a line of text, \"simpler stream creation\", which seems to be a statement or topic on its own. This line is not part of the unordered list and does not have any specific HTML formatting, such as a list marker or heading style, making it stand out from the structured list above."}
{"task_id": "HTML/27", "prompt": "Generate HTML code according to the following requirements:The HTML file features a single paragraph (<p>) element followed by an unordered list (<ul>) containing two list items (<li>).\nThe paragraph contains one piece of text, \"action items:\", which is emphasized with the <strong> tag, indicating its importance or heading nature for the content that follows.\nThe unordered list has two items:\nThe first list item suggests asking Isaac for the ability to list packages by what public io.js APIs they use, especially Stream.\nThe second list item suggests asking Rod/build for infrastructure", "level": "middle", "instruction": "Generate HTML code according to the following requirements:The HTML file features a single paragraph (<p>) element followed by an unordered list (<ul>) containing two list items (<li>).\nThe paragraph contains one piece of text, \"action items:\", which is emphasized with the <strong> tag, indicating its importance or heading nature for the content that follows.\nThe unordered list has two items:\nThe first list item suggests asking Isaac for the ability to list packages by what public io.js APIs they use, especially Stream.\nThe second list item suggests asking Rod/build for infrastructure"}
{"task_id": "HTML/28", "prompt": "Generate HTML code according to the following requirements:content is structured with a level 2 heading followed by an unordered list of references, each with a descriptive text linked to a URL. Here's the breakdown:\nLevel 2 Heading: The document starts with \"References:\" which is formatted as a level 2 headingThis serves as the title or introduction to the section that follows, implying that the content will list sources or further reading materials.\nUnordered List: Below the heading, there's an unordered list for references, indicated by asterisks (*). Each item in the list combines descriptive text with a hyperlink. The format specifics for each item are:\nDescriptive text followed by a colon (e.g., \"SemEval task:\", \".ann format:\"), which provides a brief description or name of the reference.\nA URL (e.g., https://scienceie.github.io/, http://brat.nlplab.org/standoff.html) immediately follows the descriptive text, linked without additional descriptive link text. This makes the entire URL visible and clickable in the rendered HTML.", "level": "easy", "instruction": "Generate HTML code according to the following requirements:content is structured with a level 2 heading followed by an unordered list of references, each with a descriptive text linked to a URL. Here's the breakdown:\nLevel 2 Heading: The document starts with \"References:\" which is formatted as a level 2 headingThis serves as the title or introduction to the section that follows, implying that the content will list sources or further reading materials.\nUnordered List: Below the heading, there's an unordered list for references, indicated by asterisks (*). Each item in the list combines descriptive text with a hyperlink. The format specifics for each item are:\nDescriptive text followed by a colon (e.g., \"SemEval task:\", \".ann format:\"), which provides a brief description or name of the reference.\nA URL (e.g., https://scienceie.github.io/, http://brat.nlplab.org/standoff.html) immediately follows the descriptive text, linked without additional descriptive link text. This makes the entire URL visible and clickable in the rendered HTML."}
{"task_id": "HTML/29", "prompt": "Generate HTML code according to the following requirements: content is organized into sections with headings and includes linked list items. Here's the detailed breakdown:\nLevel 2 Heading: The document begins with \"Accessibility guidelines\" as a level 2 headin This serves as the title for the first section, suggesting it will cover guidelines related to accessibility.\nLinked List Item under Level 2 Heading: Directly under the level 2 heading, there's a bulleted list item that includes a link. The link text is \"WCAG 1.1.1\" and the URL points to a specific page on the W3.org website about understanding non-text content. This is formatted as a HTML link, where the link text is enclosed in square brackets ([]) and the URL is enclosed in parentheses (()).\nLevel 3 Heading: Following the first section, there's a level 3 heading titled \"Resources\",This marks the beginning of a new section focused on providing additional materials or references.\nLinked List Item under Level 3 Heading: Under the level 3 heading, there's another bulleted list item with a link. The link text here is \"L\u00e9onie Watson, Accessible Emoji\", which points to an article on tink.uk about accessible emoji. Similar to the first link, the text is enclosed in square brackets and the URL in parentheses, forming a clickable hyperlink in HTML format.", "level": "easy", "instruction": "Generate HTML code according to the following requirements: content is organized into sections with headings and includes linked list items. Here's the detailed breakdown:\nLevel 2 Heading: The document begins with \"Accessibility guidelines\" as a level 2 headin This serves as the title for the first section, suggesting it will cover guidelines related to accessibility.\nLinked List Item under Level 2 Heading: Directly under the level 2 heading, there's a bulleted list item that includes a link. The link text is \"WCAG 1.1.1\" and the URL points to a specific page on the W3.org website about understanding non-text content. This is formatted as a HTML link, where the link text is enclosed in square brackets ([]) and the URL is enclosed in parentheses (()).\nLevel 3 Heading: Following the first section, there's a level 3 heading titled \"Resources\",This marks the beginning of a new section focused on providing additional materials or references.\nLinked List Item under Level 3 Heading: Under the level 3 heading, there's another bulleted list item with a link. The link text here is \"L\u00e9onie Watson, Accessible Emoji\", which points to an article on tink.uk about accessible emoji. Similar to the first link, the text is enclosed in square brackets and the URL in parentheses, forming a clickable hyperlink in HTML format."}
{"task_id": "HTML/30", "prompt": "Generate HTML code according to the following requirements:\nThe HTML snippet is a table structure that consists of a header (<thead>) section and a body (<tbody>) section.\nThe table header (<thead>) contains a single row (<tr>) with three column headers (<th>) labeled \"Function Name\", \"Filesystem\", and \"FilePathsBase\".\nThe table body (<tbody>) includes one row (<tr>) with three data cells (<td>). The cells contain the text \"cd\", \"AbstractString\", and \"AbstractPath\", corresponding to the headers \"Function Name\", \"Filesystem\", and \"FilePathsBase\", respectively.", "level": "easy", "instruction": "Generate HTML code according to the following requirements:\nThe HTML snippet is a table structure that consists of a header (<thead>) section and a body (<tbody>) section.\nThe table header (<thead>) contains a single row (<tr>) with three column headers (<th>) labeled \"Function Name\", \"Filesystem\", and \"FilePathsBase\".\nThe table body (<tbody>) includes one row (<tr>) with three data cells (<td>). The cells contain the text \"cd\", \"AbstractString\", and \"AbstractPath\", corresponding to the headers \"Function Name\", \"Filesystem\", and \"FilePathsBase\", respectively."}
{"task_id": "HTML/31", "prompt": "Generate HTML code according to the following requirements:\nThe provided HTML content consists of a level 1 heading followed by two paragraphs of text. Here's the breakdown of its format:\nLevel 1 Heading: The document starts with a level 1 heading  and then the text \"Heading level 1\". This creates a prominent, large, and bold heading at the top of the document, typically used as the main title.\nParagraphs: After the heading, there are two separate paragraphs of plain text. The first paragraph states, \"I really like using HTML.\" The second paragraph begins on a new line, separated from the first by a blank line, and says, \"I think I'll use it to format all of my documents from now on.\" This separation creates distinct blocks of text, each considered a separate paragraph in HTML.", "level": "middle", "instruction": "Generate HTML code according to the following requirements:\nThe provided HTML content consists of a level 1 heading followed by two paragraphs of text. Here's the breakdown of its format:\nLevel 1 Heading: The document starts with a level 1 heading  and then the text \"Heading level 1\". This creates a prominent, large, and bold heading at the top of the document, typically used as the main title.\nParagraphs: After the heading, there are two separate paragraphs of plain text. The first paragraph states, \"I really like using HTML.\" The second paragraph begins on a new line, separated from the first by a blank line, and says, \"I think I'll use it to format all of my documents from now on.\" This separation creates distinct blocks of text, each considered a separate paragraph in HTML."}
{"task_id": "HTML/32", "prompt": "Generate HTML code according to the following requirements:It starts with an inline code snippet: allowedInvalidRules is highlighted as code.\nFollowed by a descriptive text: \"is an optional string array of custom roles that should be allowed in addition to the ARIA spec, such as for cases when you\".\nContains a clickable hyperlink with the text \"need to use a non-standard role\" pointing to the URL \"https://axesslab.com/text-splitting\".", "level": "hard", "instruction": "Generate HTML code according to the following requirements:It starts with an inline code snippet: allowedInvalidRules is highlighted as code.\nFollowed by a descriptive text: \"is an optional string array of custom roles that should be allowed in addition to the ARIA spec, such as for cases when you\".\nContains a clickable hyperlink with the text \"need to use a non-standard role\" pointing to the URL \"https://axesslab.com/text-splitting\"."}
{"task_id": "HTML/33", "prompt": "Generate HTML code according to the following requirements:Begins with a third-level heading titled \"Resources\".\nFollows with an unordered list of three items, each being a hyperlink to an external resource:\nThe first link's text is \"Chrome Audit Rules, AX_ARIA_01\" and points to a GitHub page within the GoogleChrome organization's accessibility-developer-tools wiki, specifically the Audit Rules section with an anchor to #ax_aria_01.\nThe second link's text is \"DPUB-ARIA roles\" and leads to a W3C document for DPUB-ARIA 1.0.\nThe third link's text is \"MDN: Using ARIA: Roles, states, and properties\" and directs to a Mozilla Developer Network (MDN) page about using ARIA techniques.", "level": "middle", "instruction": "Generate HTML code according to the following requirements:Begins with a third-level heading titled \"Resources\".\nFollows with an unordered list of three items, each being a hyperlink to an external resource:\nThe first link's text is \"Chrome Audit Rules, AX_ARIA_01\" and points to a GitHub page within the GoogleChrome organization's accessibility-developer-tools wiki, specifically the Audit Rules section with an anchor to #ax_aria_01.\nThe second link's text is \"DPUB-ARIA roles\" and leads to a W3C document for DPUB-ARIA 1.0.\nThe third link's text is \"MDN: Using ARIA: Roles, states, and properties\" and directs to a Mozilla Developer Network (MDN) page about using ARIA techniques."}
{"task_id": "HTML/34", "prompt": "Generate HTML code according to the following requirements:Starts with a third-level heading: \"Confirming on items\".\nFollowed by a paragraph explaining that items can be validated using a specific option, referred to as ensureItem (highlighted as inline code).\nIntroduces an unordered list with two items, specifying the outcomes of using the ensureItem option:\nThe first item mentions the return of a new instance of an array with coerced item values.\nThe second item describes that the error message will list up to three items which are invalid.", "level": "hard", "instruction": "Generate HTML code according to the following requirements:Starts with a third-level heading: \"Confirming on items\".\nFollowed by a paragraph explaining that items can be validated using a specific option, referred to as ensureItem (highlighted as inline code).\nIntroduces an unordered list with two items, specifying the outcomes of using the ensureItem option:\nThe first item mentions the return of a new instance of an array with coerced item values.\nThe second item describes that the error message will list up to three items which are invalid."}
{"task_id": "HTML/35", "prompt": "Generate HTML code according to the following requirements:The first line contains a sequence of words separated by backticks without spaces, likely intended to be viewed as inline code segments. The exact sequence is: backtick, lots, backtick, of, backtick, backticks, backtick.\nThe second line attempts a more complex structure with double backticks separating words, possibly intended to test parsing behavior. The sequence is: double backtick, i, double backtick, wonder, double backtick, how, double backtick, this, double backtick, will, double backtick, be, double backtick, parsed, double backtick.", "level": "easy", "instruction": "Generate HTML code according to the following requirements:The first line contains a sequence of words separated by backticks without spaces, likely intended to be viewed as inline code segments. The exact sequence is: backtick, lots, backtick, of, backtick, backticks, backtick.\nThe second line attempts a more complex structure with double backticks separating words, possibly intended to test parsing behavior. The sequence is: double backtick, i, double backtick, wonder, double backtick, how, double backtick, this, double backtick, will, double backtick, be, double backtick, parsed, double backtick."}
{"task_id": "HTML/36", "prompt": "Generate HTML code according to the following requirements:The first line is a heading of level 1, and then the text \"Heading level 1\".\nThe second line contains a sentence \"I just love bold text\" where the phrase \"bold text\".", "level": "easy", "instruction": "Generate HTML code according to the following requirements:The first line is a heading of level 1, and then the text \"Heading level 1\".\nThe second line contains a sentence \"I just love bold text\" where the phrase \"bold text\"."}
{"task_id": "HTML/37", "prompt": "Generate HTML code according to the following requirements:The first sentence starts with plain text: \"One\".\nIt then emphasizes the phrase \"red teacher\" in bold\nThe sentence continues with plain text: \"marked, while LLMs are being able to\".\nThe phrase \"iteratively improve\" is emphasized in both bold and italic\nThe sentence goes on with italicized text: \"on produced\"\nIt then returns to plain text for \"source code,\", which is followed by a concluding clause in plain text: \"which is a risk.\"\nThe second line is a separate sentence: \"I just love bold text\", where \"bold text\" is emphasized in bold using double asterisks.", "level": "middle", "instruction": "Generate HTML code according to the following requirements:The first sentence starts with plain text: \"One\".\nIt then emphasizes the phrase \"red teacher\" in bold\nThe sentence continues with plain text: \"marked, while LLMs are being able to\".\nThe phrase \"iteratively improve\" is emphasized in both bold and italic\nThe sentence goes on with italicized text: \"on produced\"\nIt then returns to plain text for \"source code,\", which is followed by a concluding clause in plain text: \"which is a risk.\"\nThe second line is a separate sentence: \"I just love bold text\", where \"bold text\" is emphasized in bold using double asterisks."}
{"task_id": "HTML/38", "prompt": "Generate HTML code according to the following requirements:Begins with a level 1 heading: \"Changelog\".\nFollows with a level 2 heading for version \"v1.1.0\".\nUnder the version heading, there are two list items:\nThe first item starts with \"test:\" and describes a requirement handled by mocha.\nThe second item starts with \"package:\" and mentions the update to coffeescript 2 and the use of semver tilde.", "level": "easy", "instruction": "Generate HTML code according to the following requirements:Begins with a level 1 heading: \"Changelog\".\nFollows with a level 2 heading for version \"v1.1.0\".\nUnder the version heading, there are two list items:\nThe first item starts with \"test:\" and describes a requirement handled by mocha.\nThe second item starts with \"package:\" and mentions the update to coffeescript 2 and the use of semver tilde."}
{"task_id": "HTML/39", "prompt": "Generate HTML code according to the following requirements:\nThe HTML snippet consists of a paragraph (<p>) element containing an image (<img>) element. The image element has an \"alt\" attribute with the value \"Build Status\" and a \"src\" attribute pointing to the URL \"https://secure.travis-ci.org/adaltas/node-csv-parse.svg\". Following the image element, there is a text \"[travis]\" that is not linked or enclosed within any specific tag, making it plain text within the paragraph.", "level": "easy", "instruction": "Generate HTML code according to the following requirements:\nThe HTML snippet consists of a paragraph (<p>) element containing an image (<img>) element. The image element has an \"alt\" attribute with the value \"Build Status\" and a \"src\" attribute pointing to the URL \"https://secure.travis-ci.org/adaltas/node-csv-parse.svg\". Following the image element, there is a text \"[travis]\" that is not linked or enclosed within any specific tag, making it plain text within the paragraph."}
{"task_id": "HTML/40", "prompt": "Generate HTML code according to the following requirements:\nThe HTML snippet is a paragraph (<p>) that includes descriptive text about a project. The content mentions that the project is part of the \"[CSV module][csv_home]\" and describes its functionality as a parser that converts CSV text input into arrays or objects, noting that it implements the Node.js. The text \"[CSV module][csv_home]\" is presented in a way that suggests it is meant to be a link, but in this HTML snippet, it is not an actual hyperlink; instead, it's plain text formatted similarly to Markdown syntax, where the intended link reference \"[csv_home]\" is mentioned but not defined within the snippet provided.", "level": "middle", "instruction": "Generate HTML code according to the following requirements:\nThe HTML snippet is a paragraph (<p>) that includes descriptive text about a project. The content mentions that the project is part of the \"[CSV module][csv_home]\" and describes its functionality as a parser that converts CSV text input into arrays or objects, noting that it implements the Node.js. The text \"[CSV module][csv_home]\" is presented in a way that suggests it is meant to be a link, but in this HTML snippet, it is not an actual hyperlink; instead, it's plain text formatted similarly to Markdown syntax, where the intended link reference \"[csv_home]\" is mentioned but not defined within the snippet provided."}
{"task_id": "HTML/41", "prompt": "Generate HTML code according to the following requirements:Starts with a level 1 heading  followed by the text \"Release history\".\nThe next line contains a sentence in bold: \"All notable changes to this project will be documented in this file.\" ", "level": "easy", "instruction": "Generate HTML code according to the following requirements:Starts with a level 1 heading  followed by the text \"Release history\".\nThe next line contains a sentence in bold: \"All notable changes to this project will be documented in this file.\" "}
{"task_id": "HTML/42", "prompt": "Generate HTML code according to the following requirements:The first list item begins with plain text: \"Readme link\".\nIt includes an inline link with the text \"fixed\" pointing to a specific commit on GitHub. The link text is enclosed in square brackets [fixed], and the URL is enclosed in parentheses immediately following the link text (https://github.com/micromatch/picomatch/pull/13/commits/a96ab3aa2b11b6861c23289964613d85563b05df).\nThe item concludes with \"by @danez.\", where \"@danez\" is plain text, likely referencing a GitHub username.\nThe second list item starts with inline code: \"options.capture\".\nThe sentence continues as plain text: \"now works as expected when fastpaths are enabled.\"\nIt includes a plain URL https://github.com/micromatch/picomatch/pull/12/commits/26aefd71f1cfaf95c37f1c1fcab68a693b037304 after \"See\", which is not hyperlinked or labeled.\nThe item ends with \"Thanks to @DrPizza.\", with \"@DrPizza\" being plain text.", "level": "middle", "instruction": "Generate HTML code according to the following requirements:The first list item begins with plain text: \"Readme link\".\nIt includes an inline link with the text \"fixed\" pointing to a specific commit on GitHub. The link text is enclosed in square brackets [fixed], and the URL is enclosed in parentheses immediately following the link text (https://github.com/micromatch/picomatch/pull/13/commits/a96ab3aa2b11b6861c23289964613d85563b05df).\nThe item concludes with \"by @danez.\", where \"@danez\" is plain text, likely referencing a GitHub username.\nThe second list item starts with inline code: \"options.capture\".\nThe sentence continues as plain text: \"now works as expected when fastpaths are enabled.\"\nIt includes a plain URL https://github.com/micromatch/picomatch/pull/12/commits/26aefd71f1cfaf95c37f1c1fcab68a693b037304 after \"See\", which is not hyperlinked or labeled.\nThe item ends with \"Thanks to @DrPizza.\", with \"@DrPizza\" being plain text."}
{"task_id": "HTML/43", "prompt": "Generate HTML code according to the following requirements:The HTML snippet consists of a level 2 heading (<h2>) followed by an unordered list (<ul>).\n\nThe heading contains the version number \"[1.0.0]\" and the date \"2018-11-05\".\nThe unordered list contains four list items (<li>), each describing a different aspect of the version update:\nThe first item mentions the addition of a \".onMatch\" option, highlighted within <code> tags.\nThe second item discusses improvements to the \".scan\" method, also highlighted within <code> tags.\nThe third item notes numerous improvements and optimizations for matching and parsing.\nThe fourth item mentions better windows path handling.", "level": "middle", "instruction": "Generate HTML code according to the following requirements:The HTML snippet consists of a level 2 heading (<h2>) followed by an unordered list (<ul>).\n\nThe heading contains the version number \"[1.0.0]\" and the date \"2018-11-05\".\nThe unordered list contains four list items (<li>), each describing a different aspect of the version update:\nThe first item mentions the addition of a \".onMatch\" option, highlighted within <code> tags.\nThe second item discusses improvements to the \".scan\" method, also highlighted within <code> tags.\nThe third item notes numerous improvements and optimizations for matching and parsing.\nThe fourth item mentions better windows path handling."}
{"task_id": "HTML/44", "prompt": "Generate HTML code according to the following requirements:The HTML snippet consists of a single paragraph (<p>) element containing the text \"gyp-next\" which is wrapped in a <strong> tag, making it bold. The paragraph ends with a period directly after the closing <strong> tag, inside the paragraph element.", "level": "easy", "instruction": "Generate HTML code according to the following requirements:The HTML snippet consists of a single paragraph (<p>) element containing the text \"gyp-next\" which is wrapped in a <strong> tag, making it bold. The paragraph ends with a period directly after the closing <strong> tag, inside the paragraph element."}
{"task_id": "HTML/45", "prompt": "Generate HTML code according to the following requirements:The sentence begins with plain text: \"Documents are available at\".\nIt includes an inline hyperlink with the text \"gyp.gsrc.io\" pointing to the URL https://gyp.gsrc.io. The link text is enclosed in square brackets [gyp.gsrc.io], and the URL is enclosed in parentheses immediately following the link text (https://gyp.gsrc.io).\nThe sentence continues with more plain text: \", or you can check out\", followed by an inline code block.\nThe inline code block contains the branch name \"md-pages\". Unlike typical inline code that uses single backticks, this uses triple backticks ``` to enclose the branch name, which is not standard for inline code and might be interpreted differently by various HTML parsers.\nThe sentence concludes with the text \"branch to read those documents offline.\"", "level": "easy", "instruction": "Generate HTML code according to the following requirements:The sentence begins with plain text: \"Documents are available at\".\nIt includes an inline hyperlink with the text \"gyp.gsrc.io\" pointing to the URL https://gyp.gsrc.io. The link text is enclosed in square brackets [gyp.gsrc.io], and the URL is enclosed in parentheses immediately following the link text (https://gyp.gsrc.io).\nThe sentence continues with more plain text: \", or you can check out\", followed by an inline code block.\nThe inline code block contains the branch name \"md-pages\". Unlike typical inline code that uses single backticks, this uses triple backticks ``` to enclose the branch name, which is not standard for inline code and might be interpreted differently by various HTML parsers.\nThe sentence concludes with the text \"branch to read those documents offline.\""}
{"task_id": "HTML/46", "prompt": "Generate HTML code according to the following requirements:It denote a level 2 heading.\nThe text of the heading is \"Converters\".", "level": "easy", "instruction": "Generate HTML code according to the following requirements:It denote a level 2 heading.\nThe text of the heading is \"Converters\"."}
{"task_id": "HTML/47", "prompt": "Generate HTML code according to the following requirements:The sentence starts with plain text: \"See\".\nIt includes an inline hyperlink with the text \"maybe_types.md\" pointing to a relative path ./maybe_types.md. The link text is enclosed in square brackets [maybe_types.md], and the URL is enclosed in parentheses immediately following the link text (./maybe_types.md).\nThe sentence continues with more plain text: \"for more information on\".\nAn inline code snippet Nan::Maybe is included, indicated by backticks surrounding the text.\nThe sentence concludes with the words \"types.\"", "level": "easy", "instruction": "Generate HTML code according to the following requirements:The sentence starts with plain text: \"See\".\nIt includes an inline hyperlink with the text \"maybe_types.md\" pointing to a relative path ./maybe_types.md. The link text is enclosed in square brackets [maybe_types.md], and the URL is enclosed in parentheses immediately following the link text (./maybe_types.md).\nThe sentence continues with more plain text: \"for more information on\".\nAn inline code snippet Nan::Maybe is included, indicated by backticks surrounding the text.\nThe sentence concludes with the words \"types.\""}
{"task_id": "HTML/48", "prompt": "Generate HTML code according to the following requirements:Starts with a level 3 heading titled \"Example\".\nFollowed by a code block indicated by triple backticks. Inside the backticks, c++ specifies the programming language for syntax highlighting.\nThe code block contains three lines of C++ code:\nDeclaration of a v8::Local<v8::Value> variable named val.\nDeclaration and initialization of a Nan::MaybeLocal<v8::String> variable named str with a call to Nan::To<v8::String>(val).\nDeclaration and initialization of a Nan::Maybe<double> variable named d with a call to Nan::To<double>(val).", "level": "easy", "instruction": "Generate HTML code according to the following requirements:Starts with a level 3 heading titled \"Example\".\nFollowed by a code block indicated by triple backticks. Inside the backticks, c++ specifies the programming language for syntax highlighting.\nThe code block contains three lines of C++ code:\nDeclaration of a v8::Local<v8::Value> variable named val.\nDeclaration and initialization of a Nan::MaybeLocal<v8::String> variable named str with a call to Nan::To<v8::String>(val).\nDeclaration and initialization of a Nan::Maybe<double> variable named d with a call to Nan::To<double>(val)."}
{"task_id": "HTML/49", "prompt": "Generate HTML code according to the following requirements:Begins with a level 1 heading, indicated by a single #, followed by the text \"copy(src, dest, [options, callback])\". This appears to be a function signature or method declaration, including its name \"copy\" and its parameters \"src\", \"dest\", \"options\", and \"callback\". The \"options\" and \"callback\" parameters are enclosed in square brackets, suggesting they are optional.\nFollowing the heading, there's a descriptive sentence: \"Copy a file or directory. The directory can have contents.\" This provides a brief explanation of what the copy function does.\nThe sentence ends with a comparison to a Unix command, highlighted as an inline code snippet: \"cp -r\". This suggests that the function's behavior is similar to the recursive copy operation in Unix-like systems.", "level": "easy", "instruction": "Generate HTML code according to the following requirements:Begins with a level 1 heading, indicated by a single #, followed by the text \"copy(src, dest, [options, callback])\". This appears to be a function signature or method declaration, including its name \"copy\" and its parameters \"src\", \"dest\", \"options\", and \"callback\". The \"options\" and \"callback\" parameters are enclosed in square brackets, suggesting they are optional.\nFollowing the heading, there's a descriptive sentence: \"Copy a file or directory. The directory can have contents.\" This provides a brief explanation of what the copy function does.\nThe sentence ends with a comparison to a Unix command, highlighted as an inline code snippet: \"cp -r\". This suggests that the function's behavior is similar to the recursive copy operation in Unix-like systems."}
{"task_id": "HTML/50", "prompt": "Generate HTML code according to the following requirements:\nThe HTML snippet consists of a single paragraph (<p>) element that contains the text \"crontab -e\". This structure simply presents the command \"crontab -e\" as plain text within a paragraph, with no additional formatting or elements involved.", "level": "easy", "instruction": "Generate HTML code according to the following requirements:\nThe HTML snippet consists of a single paragraph (<p>) element that contains the text \"crontab -e\". This structure simply presents the command \"crontab -e\" as plain text within a paragraph, with no additional formatting or elements involved."}
